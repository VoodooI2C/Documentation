<?xml version='1.0' encoding='UTF-8'?>
<class id="VoodooI2CMultitouchEngine" name="VoodooI2CMultitouchEngine" interface="true" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <brief>Base class that all mutltitouch engines should inherit from</brief>
  <doc />
  <base access="public">
    <type name="IOService" />
  </base>
  <subclass access="public" ref="VoodooI2CNativeEngine#VoodooI2CNativeEngine" name="VoodooI2CNativeEngine" />
  <variable id="VoodooI2CMultitouchEngine::gMetaClass" name="gMetaClass">
    <type name="MetaClass" ref="VoodooI2CMultitouchEngine::MetaClass#VoodooI2CMultitouchEngine::MetaClass" />
  </variable>
  <variable id="VoodooI2CMultitouchEngine::metaClass" name="metaClass">
    <type name="OSMetaClass" qualifier=" const const *" />
  </variable>
  <class ref="VoodooI2CMultitouchEngine::MetaClass#VoodooI2CMultitouchEngine::MetaClass" name="MetaClass" />
  <field id="VoodooI2CMultitouchEngine::interface" name="interface">
    <type name="VoodooI2CMultitouchInterface" qualifier="*" ref="VoodooI2CMultitouchInterface#VoodooI2CMultitouchInterface" />
  </field>
  <constructor id="VoodooI2CMultitouchEngine::VoodooI2CMultitouchEngine" name="VoodooI2CMultitouchEngine" abstract="yes" />
  <method id="VoodooI2CMultitouchEngine::getMetaClass" name="getMetaClass" virtual="yes" abstract="yes">
    <return>
      <type name="OSMetaClass" qualifier=" const *" />
    </return>
  </method>
  <method id="VoodooI2CMultitouchEngine::getScore" name="getScore" virtual="yes" abstract="yes">
    <brief> Intended to be overwritten by an inherited class to set the engine's priority</brief>
    <doc />
    <return>
      <type name="UInt8" />
    </return>
  </method>
  <method id="VoodooI2CMultitouchEngine::handleInterruptReport" name="handleInterruptReport" virtual="yes" abstract="yes">
    <brief> Intended to be overwritten by an inherited class to handle a multitouch event</brief>
    <doc />
    <return>
      <type name="MultitouchReturn" ref="index#MultitouchReturn" />
    </return>
    <argument name="event" id="VoodooI2CMultitouchEngine::handleInterruptReport::event">
      <type name="VoodooI2CMultitouchEvent" ref="VoodooI2CMultitouchEvent#VoodooI2CMultitouchEvent" />
    </argument>
    <argument name="timestamp" id="VoodooI2CMultitouchEngine::handleInterruptReport::timestamp">
      <type name="AbsoluteTime" />
    </argument>
  </method>
  <method id="VoodooI2CMultitouchEngine::onPropertyChange" name="onPropertyChange" virtual="yes" abstract="yes">
    <return>
      <type name="void" builtin="yes" />
    </return>
  </method>
  <method id="VoodooI2CMultitouchEngine::start" name="start" virtual="yes" abstract="yes">
    <brief> Sets up the multitouch engine</brief>
    <doc />
    <return>
      <type name="bool" builtin="yes" />
    </return>
    <argument name="provider" id="VoodooI2CMultitouchEngine::start::provider">
      <type name="IOService" qualifier="*" />
    </argument>
  </method>
  <method id="VoodooI2CMultitouchEngine::willTerminate" name="willTerminate" virtual="yes" abstract="yes">
    <return>
      <type name="bool" builtin="yes" />
    </return>
    <argument name="provider" id="VoodooI2CMultitouchEngine::willTerminate::provider">
      <type name="IOService" qualifier="*" />
    </argument>
    <argument name="options" id="VoodooI2CMultitouchEngine::willTerminate::options">
      <type name="IOOptionBits" />
    </argument>
  </method>
  <constructor id="VoodooI2CMultitouchEngine::VoodooI2CMultitouchEngine" name="VoodooI2CMultitouchEngine" access="protected" abstract="yes">
    <argument name="" id="VoodooI2CMultitouchEngine::VoodooI2CMultitouchEngine::">
      <type name="OSMetaClass" qualifier=" const *" />
    </argument>
  </constructor>
  <destructor id="VoodooI2CMultitouchEngine::~VoodooI2CMultitouchEngine" name="~VoodooI2CMultitouchEngine" access="protected" virtual="yes" abstract="yes" />
</class>
